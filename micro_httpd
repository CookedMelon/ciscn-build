root@ZMncfNze:~/jkscan/sican-build# go run ./jkscan.go -t 74.50.164.118:8080

    8  8   8  8""""8 8""""8 8""""8 8"""8
    8  8   8  8      8    " 8    8 8   8
    8e 8eee8e 8eeeee 8e     8eeee8 8e  8
    88 88   8     88 88     88   8 88  8
e   88 88   8 e   88 88   e 88   8 88  8
8eee88 88   8 8eee88 88eee8 88   8 88  8

[+]2023/07/17 07:05:51 成功加载HTTP指纹:[1210]条
[+]2023/07/17 07:05:51 成功加载NMAP探针:[150]个,指纹[11916]条
[+]2023/07/17 07:05:52 准备就绪
[+]2023/07/17 07:05:52 所有扫描任务已下发完毕
normal2
http://74.50.164.118:8080
Login-ResidentialGateway
map:
FingerPrint : micro_httpd;  cpe:
Hostname :
Response : HTTP/1.1 200 OK
Server: micro_httpd
Cache-Control: no-cache
Date: Mon, 17 Jul 2023 07:05:55 GMT
Content-Type: text/html
X-Frame-Options: SAMEORIGIN

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="pragma" content="no-cache">
        <meta http-equiv="Cache-Control" content="no-cache, must-revalidate">
        <meta http-equiv="expires" content="0">
    <title>Login - Residential Gateway</title>
    <!--[if lt IE 9]><link href="/css/calix_ie_8_min.css" rel="stylesheet" type="text/css" /><![endif]-->
    <!--[if IE 9]>   <link href="/css/calix_ie_9_min.css" rel="stylesheet" type="text/css" /><![endif]-->
    <link href="/favicon.ico" rel="shortcut icon" />
    <script type="text/javascript">
        /*
                CryptoJS v3.1.2
                code.google.com/p/crypto-js
                (c) 2009-2013 by Jeff Mott. All rights reserved.
                code.google.com/p/crypto-js/wiki/License
                */
                var CryptoJS=CryptoJS||function(s,p){var m={},l=m.lib={},n=function(){},r=l.Base={extend:function(b){n.prototype=this;var h=new n;b&&h.mixIn(b);h.hasOwnProperty("init")||(h.init=function(){h.$super.init.apply(this,arguments)});h.init.prototype=h;h.$super=this;return h},create:function(){var b=this.extend();b.init.apply(b,arguments);return b},init:function(){},mixIn:function(b){for(var h in b)b.hasOwnProperty(h)&&(this[h]=b[h]);b.hasOwnProperty("toString")&&(this.toString=b.toString)},clone:function(){return this.init.prototype.extend(this)}},
                q=l.WordArray=r.extend({init:function(b,h){b=this.words=b||[];this.sigBytes=h!=p?h:4*b.length},toString:function(b){return(b||t).stringify(this)},concat:function(b){var h=this.words,a=b.words,j=this.sigBytes;b=b.sigBytes;this.clamp();if(j%4)for(var g=0;g<b;g++)h[j+g>>>2]|=(a[g>>>2]>>>24-8*(g%4)&255)<<24-8*((j+g)%4);else if(65535<a.length)for(g=0;g<b;g+=4)h[j+g>>>2]=a[g>>>2];else h.push.apply(h,a);this.sigBytes+=b;return this},clamp:function(){var b=this.words,h=this.sigBytes;b[h>>>2]&=4294967295<<
                32-8*(h%4);b.length=s.ceil(h/4)},clone:function(){var b=r.clone.call(this);b.words=this.words.slice(0);return b},random:function(b){for(var h=[],a=0;a<b;a+=4)h.push(4294967296*s.random()|0);return new q.init(h,b)}}),v=m.enc={},t=v.Hex={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++){var k=a[j>>>2]>>>24-8*(j%4)&255;g.push((k>>>4).toString(16));g.push((k&15).toString(16))}return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j+=2)g[j>>>3]|=parseInt(b.substr(j,
                2),16)<<24-4*(j%8);return new q.init(g,a/2)}},a=v.Latin1={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++)g.push(String.fromCharCode(a[j>>>2]>>>24-8*(j%4)&255));return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j++)g[j>>>2]|=(b.charCodeAt(j)&255)<<24-8*(j%4);return new q.init(g,a)}},u=v.Utf8={stringify:function(b){try{return decodeURIComponent(escape(a.stringify(b)))}catch(g){throw Error("Malformed UTF-8 data");}},parse:function(b){return a.parse(unescape(encodeURIComponent(b)))}},
                g=l.BufferedBlockAlgorithm=r.extend({reset:function(){this._data=new q.init;this._nDataBytes=0},_append:function(b){"string"==typeof b&&(b=u.parse(b));this._data.concat(b);this._nDataBytes+=b.sigBytes},_process:function(b){var a=this._data,g=a.words,j=a.sigBytes,k=this.blockSize,m=j/(4*k),m=b?s.ceil(m):s.max((m|0)-this._minBufferSize,0);b=m*k;j=s.min(4*b,j);if(b){for(var l=0;l<b;l+=k)this._doProcessBlock(g,l);l=g.splice(0,b);a.sigBytes-=j}return new q.init(l,j)},clone:function(){var b=r.clone.call(this);
                b._data=this._data.clone();return b},_minBufferSize:0});l.Hasher=g.extend({cfg:r.extend(),init:function(b){this.cfg=this.cfg.extend(b);this.reset()},reset:function(){g.reset.call(this);this._doReset()},update:function(b){this._append(b);this._process();return this},finalize:function(b){b&&this._append(b);return this._doFinalize()},blockSize:16,_createHelper:function(b){return function(a,g){return(new b.init(g)).finalize(a)}},_createHmacHelper:function(b){return function(a,g){return(new k.HMAC.init(b,
                g)).finalize(a)}}});var k=m.algo={};return m}(Math);
                (function(s){function p(a,k,b,h,l,j,m){a=a+(k&b|~k&h)+l+m;return(a<<j|a>>>32-j)+k}function m(a,k,b,h,l,j,m){a=a+(k&h|b&~h)+l+m;return(a<<j|a>>>32-j)+k}function l(a,k,b,h,l,j,m){a=a+(k^b^h)+l+m;return(a<<j|a>>>32-j)+k}function n(a,k,b,h,l,j,m){a=a+(b^(k|~h))+l+m;return(a<<j|a>>>32-j)+k}for(var r=CryptoJS,q=r.lib,v=q.WordArray,t=q.Hasher,q=r.algo,a=[],u=0;64>u;u++)a[u]=4294967296*s.abs(s.sin(u+1))|0;q=q.MD5=t.extend({_doReset:function(){this._hash=new v.init([1732584193,4023233417,2562383102,271733878])},
                _doProcessBlock:function(g,k){for(var b=0;16>b;b++){var h=k+b,w=g[h];g[h]=(w<<8|w>>>24)&16711935|(w<<24|w>>>8)&4278255360}var b=this._hash.words,h=g[k+0],w=g[k+1],j=g[k+2],q=g[k+3],r=g[k+4],s=g[k+5],t=g[k+6],u=g[k+7],v=g[k+8],x=g[k+9],y=g[k+10],z=g[k+11],A=g[k+12],B=g[k+13],C=g[k+14],D=g[k+15],c=b[0],d=b[1],e=b[2],f=b[3],c=p(c,d,e,f,h,7,a[0]),f=p(f,c,d,e,w,12,a[1]),e=p(e,f,c,d,j,17,a[2]),d=p(d,e,f,c,q,22,a[3]),c=p(c,d,e,f,r,7,a[4]),f=p(f,c,d,e,s,12,a[5]),e=p(e,f,c,d,t,17,a[6]),d=p(d,e,f,c,u,22,a[7]),
                c=p(c,d,e,f,v,7,a[8]),f=p(f,c,d,e,x,12,a[9]),e=p(e,f,c,d,y,17,a[10]),d=p(d,e,f,c,z,22,a[11]),c=p(c,d,e,f,A,7,a[12]),f=p(f,c,d,e,B,12,a[13]),e=p(e,f,c,d,C,17,a[14]),d=p(d,e,f,c,D,22,a[15]),c=m(c,d,e,f,w,5,a[16]),f=m(f,c,d,e,t,9,a[17]),e=m(e,f,c,d,z,14,a[18]),d=m(d,e,f,c,h,20,a[19]),c=m(c,d,e,f,s,5,a[20]),f=m(f,c,d,e,y,9,a[21]),e=m(e,f,c,d,D,14,a[22]),d=m(d,e,f,c,r,20,a[23]),c=m(c,d,e,f,x,5,a[24]),f=m(f,c,d,e,C,9,a[25]),e=m(e,f,c,d,q,14,a[26]),d=m(d,e,f,c,v,20,a[27]),c=m(c,d,e,f,B,5,a[28]),f=m(f,c,
                d,e,j,9,a[29]),e=m(e,f,c,d,u,14,a[30]),d=m(d,e,f,c,A,20,a[31]),c=l(c,d,e,f,s,4,a[32]),f=l(f,c,d,e,v,11,a[33]),e=l(e,f,c,d,z,16,a[34]),d=l(d,e,f,c,C,23,a[35]),c=l(c,d,e,f,w,4,a[36]),f=l(f,c,d,e,r,11,a[37]),e=l(e,f,c,d,u,16,a[38]),d=l(d,e,f,c,y,23,a[39]),c=l(c,d,e,f,B,4,a[40]),f=l(f,c,d,e,h,11,a[41]),e=l(e,f,c,d,q,16,a[42]),d=l(d,e,f,c,t,23,a[43]),c=l(c,d,e,f,x,4,a[44]),f=l(f,c,d,e,A,11,a[45]),e=l(e,f,c,d,D,16,a[46]),d=l(d,e,f,c,j,23,a[47]),c=n(c,d,e,f,h,6,a[48]),f=n(f,c,d,e,u,10,a[49]),e=n(e,f,c,d,
                C,15,a[50]),d=n(d,e,f,c,s,21,a[51]),c=n(c,d,e,f,A,6,a[52]),f=n(f,c,d,e,q,10,a[53]),e=n(e,f,c,d,y,15,a[54]),d=n(d,e,f,c,w,21,a[55]),c=n(c,d,e,f,v,6,a[56]),f=n(f,c,d,e,D,10,a[57]),e=n(e,f,c,d,t,15,a[58]),d=n(d,e,f,c,B,21,a[59]),c=n(c,d,e,f,r,6,a[60]),f=n(f,c,d,e,z,10,a[61]),e=n(e,f,c,d,j,15,a[62]),d=n(d,e,f,c,x,21,a[63]);b[0]=b[0]+c|0;b[1]=b[1]+d|0;b[2]=b[2]+e|0;b[3]=b[3]+f|0},_doFinalize:function(){var a=this._data,k=a.words,b=8*this._nDataBytes,h=8*a.sigBytes;k[h>>>5]|=128<<24-h%32;var l=s.floor(b/
                4294967296);k[(h+64>>>9<<4)+15]=(l<<8|l>>>24)&16711935|(l<<24|l>>>8)&4278255360;k[(h+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;a.sigBytes=4*(k.length+1);this._process();a=this._hash;k=a.words;for(b=0;4>b;b++)h=k[b],k[b]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;return a},clone:function(){var a=t.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=t._createHelper(q);r.HmacMD5=t._createHmacHelper(q)})(Math);

    </script>

    <link rel="stylesheet" href="styles/vendor-442fae16c0.css">

    <link rel="stylesheet" href="styles/auth-7defef25e1.css">
</head>

<body>
    <main class="auth-main">
        <div class="auth-block">
            <div class="auth-logo"></div>
            <form class="form-horizontal" name="authForm">
                <div class="form-group">
                    <div class="auth-input">
                        <i class="material-icons i-auth">person</i>
                        <input type="text" class="form-control" id="user_name_field" placeholder="Username" name="username"
                            required onkeydown="pressKey(event)" onfocus="focusInput(event)" onblur="blurInput()" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="auth-input">
                        <i class="material-icons i-auth">lock</i>
                        <input type="password" class="form-control" id="password_field" placeholder="Password" name="password"
                            required onkeydown="pressKey(event)" onfocus="focusInput(event)" onblur="blurInput()" />
                                                <i class="material-icons i-auth i-visible" onclick="changeVisible(event)">visibility_off</i>
                                                <!-- <i class="material-icons i-auth i-visible">visibility</i> -->
                    </div>
                </div>
                <div id="error_display" class="auth-error">
                    <div class="error-icon">X</div>
                    <span class="error-msg">Login Failed:
                        <br />Incorrect Username or Password.</span>
                </div>
                <div class="form-group">
                    <div class="auth-btn">
                        <button type="button" id="login_btn" class="btn btn-default btn-auth" onclick="do_submit()">Login</button>
                    </div>
                </div>
            </form>
        </div>
    </main>


    <script type="text/javascript">
                var commonMsg = 'Incorrect Username or Password.';
                var failureMsg = 'Incorrect Username or Password. You have failed %count%. After %total% failures, this page will be protected.';
                var blockMsg = 'This page has been protected. You could try again after %time%.';
        var rmtDisableMsg = 'Please enable the remote access!';
        var accountDisableMsg = 'This account is disabled!'
        window.onload = function () {
            do_load();
                        document.querySelector('body').addEventListener('touchend', function(e) {
                                if(e.target.tagName != 'INPUT') {
                                        document.getElementById('user_name_field').blur();
                                        document.getElementById('password_field').blur();
                                }
                        });
        }

                function focusInput(event) {
                        var target = event.target || event.srcElement;
                        var clientWidth = document.body.clientWidth;
                        var clientHeight = document.body.clientHeight;
                        var deviceWidth = Math.max(window.screen.width, window.screen.height);
                        var inputOffsetTop = target.offsetTop + 34;
                        if(navigator.userAgent.indexOf('iPad') < 0 && navigator.userAgent.indexOf('iPhone') < 0 && navigator.userAgent.indexOf('Mac') > -1 && deviceWidth < 1600) {
                                var visibleTop = clientWidth > clientHeight ? (clientHeight - 406) : (clientHeight - 455);
                                if(visibleTop < inputOffsetTop) {
                                        var delta = (visibleTop - inputOffsetTop) * 2;
                                        document.querySelector('.auth-block').style.marginTop = delta + 'px';
                                }
                        }
                }

                function blurInput() {
                        document.querySelector('.auth-block').style.marginTop = '';
                }

        function pressKey(event) {
            console.log('event.keyCode = ' + event.keyCode);
            if (event.keyCode === 13) {
                do_submit();
            } else {
                setErrorDisplayVisibility(false);
            }
        }

                function changeVisible(event) {
                        var target = event.target;
                        if (target.innerText === 'visibility') {
                                target.previousElementSibling.type = 'password';
                                target.innerText = 'visibility_off';
                        } else {
                                target.previousElementSibling.type = 'text';
                                target.innerText = 'visibility';
                        }
                }

        function setErrorDisplayVisibility(state, msg) {
            var errorDisplay = document.getElementById("error_display");
                        errorDisplay.innerText = state ? msg : '';
            errorDisplay.style.display = state ? 'inline-flex' : 'none';

        }

        function login_getcookie(NameOfCookie) {
            if (document.cookie.length > 0) {
                var begin = document.cookie.indexOf(NameOfCookie + "=");
                if (begin !== -1) {
                    begin += NameOfCookie.length + 1;
                    var end = document.cookie.indexOf(";", begin);
                    if (end === -1) {
                        end = document.cookie.length;
                    }
                    return unescape(document.cookie.substring(begin, end));
                }
            }
            return null;
        }

        function login_deletecookie(name, cpath) {
            var exp = new Date();
            exp.setTime(exp.getTime() - 1000);
            var cval = login_getcookie(name);
            if (cval != null) {
                if (!cpath) {
                    document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString();
                } else {
                    document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString() + ";path=" + cpath;
                }
            }
        }

        function do_submit() {

            login_deletecookie("hide_2dot4G", "/");
            login_deletecookie("hide_5G", "/");
            login_deletecookie("operationalMode", "/");
            login_deletecookie("unit_type", "/");
            login_deletecookie("dashboard", "/");
            login_deletecookie("frameparameter", "/");
            if (!isValid()) {
                return true; // True -- causes HTML5 form validation to trigger.
            }

            var xhr = getXmlHttpRequest();
            if (!xhr) {
                return true;
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        do_commit(xhr.responseText);
                    }
                }
            }
            xhr.open('POST', 'get_nonce.cmd', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send();
        }

        function do_commit(nonce) {
            var xhr = getXmlHttpRequest();
            if (!xhr) {
                return true;
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                                        if(xhr.status === 200) {
                                                if (window.location.pathname === '/auth.html') {
                                                        window.location.href = '/';
                                                } else {
                                                        window.location.reload();
                                                }
                                        } else {
                                                getErrorStatus();
                                        }
                }
            };
            var username = getUserName();
            var password = getPassword();
            var auth = CryptoJS.MD5(username + ':' + nonce + ':' + password);
            var param = 'Username=' + encodeURIComponent(username) + '&auth=' + encodeURIComponent(auth) + '&nonce=' + nonce;
            xhr.open('POST', 'login.cgi', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send(param);
        }

        function getErrorStatus() {
            var username = getUserName();
            var xhr = getXmlHttpRequest();

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if(xhr.status === 200) {
                        if(xhr.responseText) {
                            try {
                                var res = JSON.parse(xhr.responseText);
                                var msg = commonMsg;
                                    if(res.user_type + '' !== '0') {
                                        var countStr = res.count < 2 ? 'once' : (res.count + ' times');
                                        var timeStr = res.locktime < 2 ? '1 minute' : (res.locktime + ' minutes');
                                        if (res.status + '' === '101') {
                                            msg = rmtDisableMsg;
                                        } else if (res.status + '' === '102') {
                                            msg = accountDisableMsg;
                                        } else if (res.status + '' === '1') {
                                            msg = failureMsg.replace('%count%', countStr).replace('%total%', res.total_count);
                                        } else {
                                            msg = blockMsg.replace('%time%', timeStr);
                                        }
                                        //msg = res.status + '' === '1' ? failureMsg.replace('%count%', countStr).replace('%total%', res.total_count) : blockMsg.replace('%time%', timeStr);
                                    } else {//admin user
                                        if (res.status + '' === '101') {
                                            msg = rmtDisableMsg;
                                        } else if (res.status + '' === '102') {
                                            msg = accountDisableMsg;
                                        }
                                    }
                                    setErrorDisplayVisibility(true, msg);
                            } catch(err) {
                                console.error(err);
                            }
                        }
                    } else {
                        setErrorDisplayVisibility(true, commonMsg);
                    }
                }
            }

            xhr.open('POST', 'get_access_status.cmd', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send('Username=' + encodeURIComponent(username));
        }

        function getUserName() {
            var userNameField = document.getElementById("user_name_field");
            return userNameField ? userNameField.value.trim() : '';
        }

        function isUserNameValid() {
            var userName = getUserName();
            if (userName && userName.length > 0) {
                return true;
            }
            alert("Please enter a user name.");
            return false;
        }

        // ---------------------------------------------------------------
        // Password
        // ---------------------------------------------------------------
        function getPassword() {
            var passwordField = document.getElementById("password_field");
            return passwordField ? passwordField.value.trim() : '';
        }

        function isPasswordValid() {
            var password = getPassword();
            if (password && (password.length > 0)) {
                return true;
            }
            alert("Please enter a password.");
            return false;
        }

        /**
         * isValid
         * valid username and password
         * @return {Boolean} validation
         */
        function isValid() {
            return (isUserNameValid() && isPasswordValid());
        }

        function do_load() {
            var searchString;
            var queryString;
            var queryParams;
            var param;
            var isLoginFailure;
            var ii;
            var pos;

            // Detect if this is a refresh from a login failure.
            isLoginFailure = false;
            searchString = window.location.search;
            if (searchString && searchString.length) {
                queryString = searchString.substring(1);
                if (queryString && queryString.length) {
                    queryParams = queryString.split('&');
                    for (ii = 0; ii < queryParams.length; ii++) {
                        param = queryParams[ii];
                        if (param) {
                            pos = param.toLowerCase().indexOf("loginfailed");
                            if (pos >= 0) {
                                isLoginFailure = true;
                            }
                        }
                    }
                }
            }

            if (!isLoginFailure) {
                setErrorDisplayVisibility(false);
            }
        }

        function getXmlHttpRequest() {
            'use strict';

            var xmlhttp = null;

            if (window.XMLHttpRequest) { // Mozilla, Chrome
                xmlhttp = new XMLHttpRequest();
                // if (xmlhttp.overrideMimeType) {
                //     xmlhttp.overrideMimeType("text/xml");
                // }
            } else if (window.ActiveXObject) { //IE
                try {
                    xmlhttp = new ActiveXObject("Msxml2.XMLHTTP"); // new IE
                } catch (e) {
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP"); // old IE
                }
            }

            if (!xmlhttp) {
                window.alert("Your broswer does not support XMLHttpRequest!");
            }

            return xmlhttp;
        }

    </script>
</body>

</html>
FoundIP :
Cert :
Header : HTTP/1.1 200 OK
Server: micro_httpd
Cache-Control: no-cache
Date: Mon, 17 Jul 2023 07:05:55 GMT
Content-Type: text/html
X-Frame-Options: SAMEORIGIN

Body : <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="pragma" content="no-cache">
        <meta http-equiv="Cache-Control" content="no-cache, must-revalidate">
        <meta http-equiv="expires" content="0">
    <title>Login - Residential Gateway</title>
    <!--[if lt IE 9]><link href="/css/calix_ie_8_min.css" rel="stylesheet" type="text/css" /><![endif]-->
    <!--[if IE 9]>   <link href="/css/calix_ie_9_min.css" rel="stylesheet" type="text/css" /><![endif]-->
    <link href="/favicon.ico" rel="shortcut icon" />
    <script type="text/javascript">
        /*
                CryptoJS v3.1.2
                code.google.com/p/crypto-js
                (c) 2009-2013 by Jeff Mott. All rights reserved.
                code.google.com/p/crypto-js/wiki/License
                */
                var CryptoJS=CryptoJS||function(s,p){var m={},l=m.lib={},n=function(){},r=l.Base={extend:function(b){n.prototype=this;var h=new n;b&&h.mixIn(b);h.hasOwnProperty("init")||(h.init=function(){h.$super.init.apply(this,arguments)});h.init.prototype=h;h.$super=this;return h},create:function(){var b=this.extend();b.init.apply(b,arguments);return b},init:function(){},mixIn:function(b){for(var h in b)b.hasOwnProperty(h)&&(this[h]=b[h]);b.hasOwnProperty("toString")&&(this.toString=b.toString)},clone:function(){return this.init.prototype.extend(this)}},
                q=l.WordArray=r.extend({init:function(b,h){b=this.words=b||[];this.sigBytes=h!=p?h:4*b.length},toString:function(b){return(b||t).stringify(this)},concat:function(b){var h=this.words,a=b.words,j=this.sigBytes;b=b.sigBytes;this.clamp();if(j%4)for(var g=0;g<b;g++)h[j+g>>>2]|=(a[g>>>2]>>>24-8*(g%4)&255)<<24-8*((j+g)%4);else if(65535<a.length)for(g=0;g<b;g+=4)h[j+g>>>2]=a[g>>>2];else h.push.apply(h,a);this.sigBytes+=b;return this},clamp:function(){var b=this.words,h=this.sigBytes;b[h>>>2]&=4294967295<<
                32-8*(h%4);b.length=s.ceil(h/4)},clone:function(){var b=r.clone.call(this);b.words=this.words.slice(0);return b},random:function(b){for(var h=[],a=0;a<b;a+=4)h.push(4294967296*s.random()|0);return new q.init(h,b)}}),v=m.enc={},t=v.Hex={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++){var k=a[j>>>2]>>>24-8*(j%4)&255;g.push((k>>>4).toString(16));g.push((k&15).toString(16))}return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j+=2)g[j>>>3]|=parseInt(b.substr(j,
                2),16)<<24-4*(j%8);return new q.init(g,a/2)}},a=v.Latin1={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++)g.push(String.fromCharCode(a[j>>>2]>>>24-8*(j%4)&255));return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j++)g[j>>>2]|=(b.charCodeAt(j)&255)<<24-8*(j%4);return new q.init(g,a)}},u=v.Utf8={stringify:function(b){try{return decodeURIComponent(escape(a.stringify(b)))}catch(g){throw Error("Malformed UTF-8 data");}},parse:function(b){return a.parse(unescape(encodeURIComponent(b)))}},
                g=l.BufferedBlockAlgorithm=r.extend({reset:function(){this._data=new q.init;this._nDataBytes=0},_append:function(b){"string"==typeof b&&(b=u.parse(b));this._data.concat(b);this._nDataBytes+=b.sigBytes},_process:function(b){var a=this._data,g=a.words,j=a.sigBytes,k=this.blockSize,m=j/(4*k),m=b?s.ceil(m):s.max((m|0)-this._minBufferSize,0);b=m*k;j=s.min(4*b,j);if(b){for(var l=0;l<b;l+=k)this._doProcessBlock(g,l);l=g.splice(0,b);a.sigBytes-=j}return new q.init(l,j)},clone:function(){var b=r.clone.call(this);
                b._data=this._data.clone();return b},_minBufferSize:0});l.Hasher=g.extend({cfg:r.extend(),init:function(b){this.cfg=this.cfg.extend(b);this.reset()},reset:function(){g.reset.call(this);this._doReset()},update:function(b){this._append(b);this._process();return this},finalize:function(b){b&&this._append(b);return this._doFinalize()},blockSize:16,_createHelper:function(b){return function(a,g){return(new b.init(g)).finalize(a)}},_createHmacHelper:function(b){return function(a,g){return(new k.HMAC.init(b,
                g)).finalize(a)}}});var k=m.algo={};return m}(Math);
                (function(s){function p(a,k,b,h,l,j,m){a=a+(k&b|~k&h)+l+m;return(a<<j|a>>>32-j)+k}function m(a,k,b,h,l,j,m){a=a+(k&h|b&~h)+l+m;return(a<<j|a>>>32-j)+k}function l(a,k,b,h,l,j,m){a=a+(k^b^h)+l+m;return(a<<j|a>>>32-j)+k}function n(a,k,b,h,l,j,m){a=a+(b^(k|~h))+l+m;return(a<<j|a>>>32-j)+k}for(var r=CryptoJS,q=r.lib,v=q.WordArray,t=q.Hasher,q=r.algo,a=[],u=0;64>u;u++)a[u]=4294967296*s.abs(s.sin(u+1))|0;q=q.MD5=t.extend({_doReset:function(){this._hash=new v.init([1732584193,4023233417,2562383102,271733878])},
                _doProcessBlock:function(g,k){for(var b=0;16>b;b++){var h=k+b,w=g[h];g[h]=(w<<8|w>>>24)&16711935|(w<<24|w>>>8)&4278255360}var b=this._hash.words,h=g[k+0],w=g[k+1],j=g[k+2],q=g[k+3],r=g[k+4],s=g[k+5],t=g[k+6],u=g[k+7],v=g[k+8],x=g[k+9],y=g[k+10],z=g[k+11],A=g[k+12],B=g[k+13],C=g[k+14],D=g[k+15],c=b[0],d=b[1],e=b[2],f=b[3],c=p(c,d,e,f,h,7,a[0]),f=p(f,c,d,e,w,12,a[1]),e=p(e,f,c,d,j,17,a[2]),d=p(d,e,f,c,q,22,a[3]),c=p(c,d,e,f,r,7,a[4]),f=p(f,c,d,e,s,12,a[5]),e=p(e,f,c,d,t,17,a[6]),d=p(d,e,f,c,u,22,a[7]),
                c=p(c,d,e,f,v,7,a[8]),f=p(f,c,d,e,x,12,a[9]),e=p(e,f,c,d,y,17,a[10]),d=p(d,e,f,c,z,22,a[11]),c=p(c,d,e,f,A,7,a[12]),f=p(f,c,d,e,B,12,a[13]),e=p(e,f,c,d,C,17,a[14]),d=p(d,e,f,c,D,22,a[15]),c=m(c,d,e,f,w,5,a[16]),f=m(f,c,d,e,t,9,a[17]),e=m(e,f,c,d,z,14,a[18]),d=m(d,e,f,c,h,20,a[19]),c=m(c,d,e,f,s,5,a[20]),f=m(f,c,d,e,y,9,a[21]),e=m(e,f,c,d,D,14,a[22]),d=m(d,e,f,c,r,20,a[23]),c=m(c,d,e,f,x,5,a[24]),f=m(f,c,d,e,C,9,a[25]),e=m(e,f,c,d,q,14,a[26]),d=m(d,e,f,c,v,20,a[27]),c=m(c,d,e,f,B,5,a[28]),f=m(f,c,
                d,e,j,9,a[29]),e=m(e,f,c,d,u,14,a[30]),d=m(d,e,f,c,A,20,a[31]),c=l(c,d,e,f,s,4,a[32]),f=l(f,c,d,e,v,11,a[33]),e=l(e,f,c,d,z,16,a[34]),d=l(d,e,f,c,C,23,a[35]),c=l(c,d,e,f,w,4,a[36]),f=l(f,c,d,e,r,11,a[37]),e=l(e,f,c,d,u,16,a[38]),d=l(d,e,f,c,y,23,a[39]),c=l(c,d,e,f,B,4,a[40]),f=l(f,c,d,e,h,11,a[41]),e=l(e,f,c,d,q,16,a[42]),d=l(d,e,f,c,t,23,a[43]),c=l(c,d,e,f,x,4,a[44]),f=l(f,c,d,e,A,11,a[45]),e=l(e,f,c,d,D,16,a[46]),d=l(d,e,f,c,j,23,a[47]),c=n(c,d,e,f,h,6,a[48]),f=n(f,c,d,e,u,10,a[49]),e=n(e,f,c,d,
                C,15,a[50]),d=n(d,e,f,c,s,21,a[51]),c=n(c,d,e,f,A,6,a[52]),f=n(f,c,d,e,q,10,a[53]),e=n(e,f,c,d,y,15,a[54]),d=n(d,e,f,c,w,21,a[55]),c=n(c,d,e,f,v,6,a[56]),f=n(f,c,d,e,D,10,a[57]),e=n(e,f,c,d,t,15,a[58]),d=n(d,e,f,c,B,21,a[59]),c=n(c,d,e,f,r,6,a[60]),f=n(f,c,d,e,z,10,a[61]),e=n(e,f,c,d,j,15,a[62]),d=n(d,e,f,c,x,21,a[63]);b[0]=b[0]+c|0;b[1]=b[1]+d|0;b[2]=b[2]+e|0;b[3]=b[3]+f|0},_doFinalize:function(){var a=this._data,k=a.words,b=8*this._nDataBytes,h=8*a.sigBytes;k[h>>>5]|=128<<24-h%32;var l=s.floor(b/
                4294967296);k[(h+64>>>9<<4)+15]=(l<<8|l>>>24)&16711935|(l<<24|l>>>8)&4278255360;k[(h+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;a.sigBytes=4*(k.length+1);this._process();a=this._hash;k=a.words;for(b=0;4>b;b++)h=k[b],k[b]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;return a},clone:function(){var a=t.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=t._createHelper(q);r.HmacMD5=t._createHmacHelper(q)})(Math);

    </script>

    <link rel="stylesheet" href="styles/vendor-442fae16c0.css">

    <link rel="stylesheet" href="styles/auth-7defef25e1.css">
</head>

<body>
    <main class="auth-main">
        <div class="auth-block">
            <div class="auth-logo"></div>
            <form class="form-horizontal" name="authForm">
                <div class="form-group">
                    <div class="auth-input">
                        <i class="material-icons i-auth">person</i>
                        <input type="text" class="form-control" id="user_name_field" placeholder="Username" name="username"
                            required onkeydown="pressKey(event)" onfocus="focusInput(event)" onblur="blurInput()" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="auth-input">
                        <i class="material-icons i-auth">lock</i>
                        <input type="password" class="form-control" id="password_field" placeholder="Password" name="password"
                            required onkeydown="pressKey(event)" onfocus="focusInput(event)" onblur="blurInput()" />
                                                <i class="material-icons i-auth i-visible" onclick="changeVisible(event)">visibility_off</i>
                                                <!-- <i class="material-icons i-auth i-visible">visibility</i> -->
                    </div>
                </div>
                <div id="error_display" class="auth-error">
                    <div class="error-icon">X</div>
                    <span class="error-msg">Login Failed:
                        <br />Incorrect Username or Password.</span>
                </div>
                <div class="form-group">
                    <div class="auth-btn">
                        <button type="button" id="login_btn" class="btn btn-default btn-auth" onclick="do_submit()">Login</button>
                    </div>
                </div>
            </form>
        </div>
    </main>


    <script type="text/javascript">
                var commonMsg = 'Incorrect Username or Password.';
                var failureMsg = 'Incorrect Username or Password. You have failed %count%. After %total% failures, this page will be protected.';
                var blockMsg = 'This page has been protected. You could try again after %time%.';
        var rmtDisableMsg = 'Please enable the remote access!';
        var accountDisableMsg = 'This account is disabled!'
        window.onload = function () {
            do_load();
                        document.querySelector('body').addEventListener('touchend', function(e) {
                                if(e.target.tagName != 'INPUT') {
                                        document.getElementById('user_name_field').blur();
                                        document.getElementById('password_field').blur();
                                }
                        });
        }

                function focusInput(event) {
                        var target = event.target || event.srcElement;
                        var clientWidth = document.body.clientWidth;
                        var clientHeight = document.body.clientHeight;
                        var deviceWidth = Math.max(window.screen.width, window.screen.height);
                        var inputOffsetTop = target.offsetTop + 34;
                        if(navigator.userAgent.indexOf('iPad') < 0 && navigator.userAgent.indexOf('iPhone') < 0 && navigator.userAgent.indexOf('Mac') > -1 && deviceWidth < 1600) {
                                var visibleTop = clientWidth > clientHeight ? (clientHeight - 406) : (clientHeight - 455);
                                if(visibleTop < inputOffsetTop) {
                                        var delta = (visibleTop - inputOffsetTop) * 2;
                                        document.querySelector('.auth-block').style.marginTop = delta + 'px';
                                }
                        }
                }

                function blurInput() {
                        document.querySelector('.auth-block').style.marginTop = '';
                }

        function pressKey(event) {
            console.log('event.keyCode = ' + event.keyCode);
            if (event.keyCode === 13) {
                do_submit();
            } else {
                setErrorDisplayVisibility(false);
            }
        }

                function changeVisible(event) {
                        var target = event.target;
                        if (target.innerText === 'visibility') {
                                target.previousElementSibling.type = 'password';
                                target.innerText = 'visibility_off';
                        } else {
                                target.previousElementSibling.type = 'text';
                                target.innerText = 'visibility';
                        }
                }

        function setErrorDisplayVisibility(state, msg) {
            var errorDisplay = document.getElementById("error_display");
                        errorDisplay.innerText = state ? msg : '';
            errorDisplay.style.display = state ? 'inline-flex' : 'none';

        }

        function login_getcookie(NameOfCookie) {
            if (document.cookie.length > 0) {
                var begin = document.cookie.indexOf(NameOfCookie + "=");
                if (begin !== -1) {
                    begin += NameOfCookie.length + 1;
                    var end = document.cookie.indexOf(";", begin);
                    if (end === -1) {
                        end = document.cookie.length;
                    }
                    return unescape(document.cookie.substring(begin, end));
                }
            }
            return null;
        }

        function login_deletecookie(name, cpath) {
            var exp = new Date();
            exp.setTime(exp.getTime() - 1000);
            var cval = login_getcookie(name);
            if (cval != null) {
                if (!cpath) {
                    document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString();
                } else {
                    document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString() + ";path=" + cpath;
                }
            }
        }

        function do_submit() {

            login_deletecookie("hide_2dot4G", "/");
            login_deletecookie("hide_5G", "/");
            login_deletecookie("operationalMode", "/");
            login_deletecookie("unit_type", "/");
            login_deletecookie("dashboard", "/");
            login_deletecookie("frameparameter", "/");
            if (!isValid()) {
                return true; // True -- causes HTML5 form validation to trigger.
            }

            var xhr = getXmlHttpRequest();
            if (!xhr) {
                return true;
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        do_commit(xhr.responseText);
                    }
                }
            }
            xhr.open('POST', 'get_nonce.cmd', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send();
        }

        function do_commit(nonce) {
            var xhr = getXmlHttpRequest();
            if (!xhr) {
                return true;
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                                        if(xhr.status === 200) {
                                                if (window.location.pathname === '/auth.html') {
                                                        window.location.href = '/';
                                                } else {
                                                        window.location.reload();
                                                }
                                        } else {
                                                getErrorStatus();
                                        }
                }
            };
            var username = getUserName();
            var password = getPassword();
            var auth = CryptoJS.MD5(username + ':' + nonce + ':' + password);
            var param = 'Username=' + encodeURIComponent(username) + '&auth=' + encodeURIComponent(auth) + '&nonce=' + nonce;
            xhr.open('POST', 'login.cgi', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send(param);
        }

        function getErrorStatus() {
            var username = getUserName();
            var xhr = getXmlHttpRequest();

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if(xhr.status === 200) {
                        if(xhr.responseText) {
                            try {
                                var res = JSON.parse(xhr.responseText);
                                var msg = commonMsg;
                                    if(res.user_type + '' !== '0') {
                                        var countStr = res.count < 2 ? 'once' : (res.count + ' times');
                                        var timeStr = res.locktime < 2 ? '1 minute' : (res.locktime + ' minutes');
                                        if (res.status + '' === '101') {
                                            msg = rmtDisableMsg;
                                        } else if (res.status + '' === '102') {
                                            msg = accountDisableMsg;
                                        } else if (res.status + '' === '1') {
                                            msg = failureMsg.replace('%count%', countStr).replace('%total%', res.total_count);
                                        } else {
                                            msg = blockMsg.replace('%time%', timeStr);
                                        }
                                        //msg = res.status + '' === '1' ? failureMsg.replace('%count%', countStr).replace('%total%', res.total_count) : blockMsg.replace('%time%', timeStr);
                                    } else {//admin user
                                        if (res.status + '' === '101') {
                                            msg = rmtDisableMsg;
                                        } else if (res.status + '' === '102') {
                                            msg = accountDisableMsg;
                                        }
                                    }
                                    setErrorDisplayVisibility(true, msg);
                            } catch(err) {
                                console.error(err);
                            }
                        }
                    } else {
                        setErrorDisplayVisibility(true, commonMsg);
                    }
                }
            }

            xhr.open('POST', 'get_access_status.cmd', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.send('Username=' + encodeURIComponent(username));
        }

        function getUserName() {
            var userNameField = document.getElementById("user_name_field");
            return userNameField ? userNameField.value.trim() : '';
        }

        function isUserNameValid() {
            var userName = getUserName();
            if (userName && userName.length > 0) {
                return true;
            }
            alert("Please enter a user name.");
            return false;
        }

        // ---------------------------------------------------------------
        // Password
        // ---------------------------------------------------------------
        function getPassword() {
            var passwordField = document.getElementById("password_field");
            return passwordField ? passwordField.value.trim() : '';
        }

        function isPasswordValid() {
            var password = getPassword();
            if (password && (password.length > 0)) {
                return true;
            }
            alert("Please enter a password.");
            return false;
        }

        /**
         * isValid
         * valid username and password
         * @return {Boolean} validation
         */
        function isValid() {
            return (isUserNameValid() && isPasswordValid());
        }

        function do_load() {
            var searchString;
            var queryString;
            var queryParams;
            var param;
            var isLoginFailure;
            var ii;
            var pos;

            // Detect if this is a refresh from a login failure.
            isLoginFailure = false;
            searchString = window.location.search;
            if (searchString && searchString.length) {
                queryString = searchString.substring(1);
                if (queryString && queryString.length) {
                    queryParams = queryString.split('&');
                    for (ii = 0; ii < queryParams.length; ii++) {
                        param = queryParams[ii];
                        if (param) {
                            pos = param.toLowerCase().indexOf("loginfailed");
                            if (pos >= 0) {
                                isLoginFailure = true;
                            }
                        }
                    }
                }
            }

            if (!isLoginFailure) {
                setErrorDisplayVisibility(false);
            }
        }

        function getXmlHttpRequest() {
            'use strict';

            var xmlhttp = null;

            if (window.XMLHttpRequest) { // Mozilla, Chrome
                xmlhttp = new XMLHttpRequest();
                // if (xmlhttp.overrideMimeType) {
                //     xmlhttp.overrideMimeType("text/xml");
                // }
            } else if (window.ActiveXObject) { //IE
                try {
                    xmlhttp = new ActiveXObject("Msxml2.XMLHTTP"); // new IE
                } catch (e) {
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP"); // old IE
                }
            }

            if (!xmlhttp) {
                window.alert("Your broswer does not support XMLHttpRequest!");
            }

            return xmlhttp;
        }

    </script>
</body>

</html>
ICP :
Domain :
MACAddr :
Service : http
Port : 8080
IP : 74.50.164.118
------------------------------
[*]2023/07/17 07:06:00 当前存活协程数：IP：0 个，Port：0 个，URL：0 个